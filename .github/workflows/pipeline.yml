name: Node.js CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x, 21.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            # Mise en cache des dépendances npm
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Set up Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: npm install

            # Exécuter les tests avec coverage
            - name: Run Jest tests with coverage
              run: npx jest --coverage --coverageDirectory=coverage

            # Vérification de la structure du répertoire coverage
            - name: List files in coverage directory
              run: ls -R ./coverage

            # Obtenir le chemin exact du fichier lcov.info
            - name: Check exact path of lcov.info
              run: realpath ./coverage/lcov.info

            # Lister les fichiers avant l'upload vers Codecov
            - name: List files before Codecov upload
              run: ls -l /home/runner/work/integration-deploiement-back/integration-deploiement-back/coverage

            # Upload des rapports de couverture Jest
            - name: Upload Jest coverage report
              if: success()
              uses: actions/upload-artifact@v3
              with:
                  name: coverage-report
                  path: coverage

    generate-docs:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            # Mise en cache des dépendances npm pour la génération des docs
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Set up Node.js 20.x
              uses: actions/setup-node@v3
              with:
                  node-version: 20.x

            # Génération de la documentation JSDoc avec npm
            - name: Generate JSDoc documentation
              run: npm run jsdoc

            # Vérification de l'existence du répertoire ./public/docs
            - name: List generated documentation files
              run: ls -R ./public/docs

            # Configuration de Git avant le déploiement (nom d'utilisateur et email)
            - name: Setup Git
              run: |
                  git config --global user.name 'GitHub Actions'
                  git config --global user.email 'actions@github.com'

            # Ajout de l'étape pour déployer la documentation sur GitHub Pages
            - name: Upload documentation to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./public/docs
                  publish_branch: gh-pages
                  force_orphan: true # Créer une branche orpheline si elle n'existe pas

    upload-coverage:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Upload coverage reports to Codecov
              run: bash <(curl -s https://codecov.io/bash) -f ./coverage/lcov.info -t ${{ secrets.CODECOV_TOKEN }} -Z
